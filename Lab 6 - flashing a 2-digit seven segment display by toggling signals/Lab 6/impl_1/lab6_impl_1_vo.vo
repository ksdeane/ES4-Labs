
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 2023.1.0.43.3

// backanno -o lab6_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui lab6_impl_1.udb 
// Netlist created on Tue Oct 22 19:52:53 2024
// Netlist written on Tue Oct 22 19:53:05 2024
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module top ( dipBits, leds, display );
  input  [5:0] dipBits;
  output [1:0] leds;
  output [6:0] display;
  wire   n60, n61, n1100, n3, n712, n4, clk, n714, \leds_c_12_N_26[12] , n59, 
         n1103, leds_c_12, n2, n70, n1085, n13, VCC_net, n704, n64, n65, n1094, 
         n7, n708, n8, n710, n66, n67, n1091, n9, n706, n10, n68, n69, n1088, 
         n11, n12, n62, n63, n1097, n5, n6, \finalOnes[0] , \finalTens[0] , 
         \dddd1.finalOnes_0__N_14 , \dddd1.lowBCD[3] , \dddd1.lowBCD[2] , 
         \lowBCD[0] , display_c_0, \finalTens[1] , \finalOnes[1] , 
         \highBCD[2] , \highBCD[0] , \highBCD[1] , display_c_1, 
         \dddd1.lowBCD_2__N_19 , \dddd1.n938 , \dddd1.lowBCD_3__N_16 , 
         \dddd1.dipBits_c_1 , display_c_2_N_24, display_c_2_N_25, display_c_2, 
         display_c_6_N_21, \finalOnes[6] , display_c_6, display_c_5_N_22, 
         display_c_4_N_23, \finalOnes[5] , display_c_5, \finalOnes[4] , 
         display_c_4, \dddd1.dipBits_c_2 , \dddd1.dipBits_c_3 , 
         \dddd1.dipBits_c_5 , \dddd1.dipBits_c_4 , \finalTens[3] , 
         \finalOnes[3] , display_c_3, leds_c_1;

  SLICE_0 SLICE_0( .DI1(n60), .DI0(n61), .D1(n1100), .C1(n3), .D0(n712), 
    .C0(n4), .CLK(clk), .CIN0(n712), .CIN1(n1100), .Q0(n4), .Q1(n3), .F0(n61), 
    .F1(n60), .COUT1(n714), .COUT0(n1100));
  SLICE_1 SLICE_1( .DI1(\leds_c_12_N_26[12] ), .DI0(n59), .D1(n1103), 
    .C1(leds_c_12), .D0(n714), .C0(n2), .CLK(clk), .CIN0(n714), .CIN1(n1103), 
    .Q0(n2), .Q1(leds_c_12), .F0(n59), .F1(\leds_c_12_N_26[12] ), 
    .COUT0(n1103));
  SLICE_2 SLICE_2( .DI1(n70), .D1(n1085), .C1(n13), .B1(VCC_net), .CLK(clk), 
    .CIN1(n1085), .Q1(n13), .F1(n70), .COUT1(n704), .COUT0(n1085));
  SLICE_3 SLICE_3( .DI1(n64), .DI0(n65), .D1(n1094), .C1(n7), .D0(n708), 
    .C0(n8), .CLK(clk), .CIN0(n708), .CIN1(n1094), .Q0(n8), .Q1(n7), .F0(n65), 
    .F1(n64), .COUT1(n710), .COUT0(n1094));
  SLICE_4 SLICE_4( .DI1(n66), .DI0(n67), .D1(n1091), .C1(n9), .D0(n706), 
    .C0(n10), .CLK(clk), .CIN0(n706), .CIN1(n1091), .Q0(n10), .Q1(n9), 
    .F0(n67), .F1(n66), .COUT1(n708), .COUT0(n1091));
  SLICE_5 SLICE_5( .DI1(n68), .DI0(n69), .D1(n1088), .C1(n11), .D0(n704), 
    .C0(n12), .CLK(clk), .CIN0(n704), .CIN1(n1088), .Q0(n12), .Q1(n11), 
    .F0(n69), .F1(n68), .COUT1(n706), .COUT0(n1088));
  SLICE_6 SLICE_6( .DI1(n62), .DI0(n63), .D1(n1097), .C1(n5), .D0(n710), 
    .C0(n6), .CLK(clk), .CIN0(n710), .CIN1(n1097), .Q0(n6), .Q1(n5), .F0(n63), 
    .F1(n62), .COUT1(n712), .COUT0(n1097));
  SLICE_7 SLICE_7( .D1(leds_c_12), .C1(\finalOnes[0] ), .B1(\finalTens[0] ), 
    .D0(\dddd1.finalOnes_0__N_14 ), .C0(\dddd1.lowBCD[3] ), 
    .B0(\dddd1.lowBCD[2] ), .A0(\lowBCD[0] ), .F0(\finalOnes[0] ), 
    .F1(display_c_0));
  SLICE_9 SLICE_9( .D1(leds_c_12), .C1(\finalTens[1] ), .B1(\finalOnes[1] ), 
    .D0(\highBCD[2] ), .C0(\highBCD[0] ), .A0(\highBCD[1] ), 
    .F0(\finalTens[1] ), .F1(display_c_1));
  dddd1_sevenseg1_SLICE_10 \dddd1.sevenseg1.SLICE_10 ( 
    .D1(\dddd1.finalOnes_0__N_14 ), .C1(\dddd1.lowBCD[2] ), .B1(\lowBCD[0] ), 
    .A1(\dddd1.lowBCD[3] ), .D0(\dddd1.lowBCD_2__N_19 ), .C0(\dddd1.n938 ), 
    .B0(\dddd1.lowBCD_3__N_16 ), .A0(\dddd1.dipBits_c_1 ), 
    .F0(\dddd1.lowBCD[2] ), .F1(\finalOnes[1] ));
  SLICE_11 SLICE_11( .D1(leds_c_12), .C1(display_c_2_N_24), 
    .B1(display_c_2_N_25), .A1(\lowBCD[0] ), .D0(\highBCD[2] ), 
    .C0(\highBCD[1] ), .B0(\highBCD[0] ), .F0(display_c_2_N_24), 
    .F1(display_c_2));
  SLICE_13 SLICE_13( .D0(\highBCD[2] ), .C0(\highBCD[0] ), 
    .F0(display_c_6_N_21));
  SLICE_14 SLICE_14( .D1(leds_c_12), .C1(\finalOnes[6] ), 
    .B1(display_c_6_N_21), .A1(\highBCD[1] ), .D0(\lowBCD[0] ), 
    .C0(\dddd1.lowBCD[2] ), .B0(\dddd1.lowBCD[3] ), 
    .A0(\dddd1.finalOnes_0__N_14 ), .F0(\finalOnes[6] ), .F1(display_c_6));
  SLICE_15 SLICE_15( .D1(\highBCD[0] ), .C1(\highBCD[1] ), .D0(\highBCD[1] ), 
    .C0(\highBCD[0] ), .F0(display_c_5_N_22), .F1(display_c_4_N_23));
  SLICE_16 SLICE_16( .D1(leds_c_12), .C1(\finalOnes[5] ), 
    .B1(display_c_5_N_22), .A1(\highBCD[2] ), .D0(\dddd1.finalOnes_0__N_14 ), 
    .C0(\dddd1.lowBCD[3] ), .B0(\lowBCD[0] ), .A0(\dddd1.lowBCD[2] ), 
    .F0(\finalOnes[5] ), .F1(display_c_5));
  SLICE_18 SLICE_18( .D1(leds_c_12), .C1(\finalOnes[4] ), 
    .B1(display_c_4_N_23), .A1(\highBCD[2] ), .D0(\dddd1.finalOnes_0__N_14 ), 
    .C0(\dddd1.lowBCD[3] ), .B0(\lowBCD[0] ), .A0(\dddd1.lowBCD[2] ), 
    .F0(\finalOnes[4] ), .F1(display_c_4));
  dddd1_SLICE_19 \dddd1.SLICE_19 ( .D1(\dddd1.lowBCD_2__N_19 ), 
    .C1(\dddd1.lowBCD_3__N_16 ), .B1(\dddd1.n938 ), .A1(\dddd1.dipBits_c_1 ), 
    .D0(\dddd1.dipBits_c_2 ), .C0(\dddd1.dipBits_c_3 ), 
    .B0(\dddd1.dipBits_c_5 ), .A0(\dddd1.dipBits_c_4 ), 
    .F0(\dddd1.lowBCD_3__N_16 ), .F1(\dddd1.lowBCD[3] ));
  dddd1_SLICE_20 \dddd1.SLICE_20 ( .D1(\dddd1.lowBCD[2] ), 
    .C1(\dddd1.finalOnes_0__N_14 ), .A1(\dddd1.lowBCD[3] ), 
    .D0(\dddd1.lowBCD_2__N_19 ), .C0(\dddd1.n938 ), .B0(\dddd1.dipBits_c_1 ), 
    .A0(\dddd1.lowBCD_3__N_16 ), .F0(\dddd1.finalOnes_0__N_14 ), 
    .F1(display_c_2_N_25));
  dddd1_SLICE_21 \dddd1.SLICE_21 ( .D1(\dddd1.dipBits_c_3 ), 
    .C1(\dddd1.dipBits_c_2 ), .B1(\dddd1.dipBits_c_4 ), 
    .A1(\dddd1.dipBits_c_5 ), .D0(\dddd1.dipBits_c_2 ), 
    .C0(\dddd1.dipBits_c_3 ), .B0(\dddd1.dipBits_c_5 ), 
    .A0(\dddd1.dipBits_c_4 ), .F0(\dddd1.n938 ), .F1(\dddd1.lowBCD_2__N_19 ));
  dddd1_sevenseg2_SLICE_25 \dddd1.sevenseg2.SLICE_25 ( .D1(\highBCD[0] ), 
    .C1(\highBCD[2] ), .B1(\highBCD[1] ), .D0(\highBCD[2] ), .C0(\highBCD[0] ), 
    .A0(\highBCD[1] ), .F0(\finalTens[3] ), .F1(\finalTens[0] ));
  SLICE_26 SLICE_26( .D1(leds_c_12), .C1(\finalOnes[3] ), .B1(\finalTens[3] ), 
    .D0(\dddd1.lowBCD[2] ), .C0(\dddd1.finalOnes_0__N_14 ), 
    .B0(\dddd1.lowBCD[3] ), .A0(\lowBCD[0] ), .F0(\finalOnes[3] ), 
    .F1(display_c_3));
  SLICE_33 SLICE_33( .F0(VCC_net));
  SLICE_34 SLICE_34( .D0(leds_c_12), .F0(leds_c_1));
  osc osc( .CLKHFPU(VCC_net), .CLKHFEN(VCC_net), .CLKHF(clk));
  dddd1_lowBCD_0__I_0 \dddd1.lowBCD_0__I_0 ( .A5(\dddd1.dipBits_c_5 ), 
    .A4(\dddd1.dipBits_c_4 ), .A3(\dddd1.dipBits_c_3 ), 
    .A2(\dddd1.dipBits_c_2 ), .A1(\dddd1.dipBits_c_1 ), .A0(\lowBCD[0] ), 
    .B3(VCC_net), .B2(VCC_net), .B0(VCC_net), .O9(\highBCD[2] ), 
    .O8(\highBCD[1] ), .O7(\highBCD[0] ));
  dipBits_0_ \dipBits[0]_I ( .PADDI(\lowBCD[0] ), .dipBits0(dipBits[0]));
  dipBits_1_ \dipBits[1]_I ( .PADDI(\dddd1.dipBits_c_1 ), 
    .dipBits1(dipBits[1]));
  dipBits_2_ \dipBits[2]_I ( .PADDI(\dddd1.dipBits_c_2 ), 
    .dipBits2(dipBits[2]));
  dipBits_3_ \dipBits[3]_I ( .PADDI(\dddd1.dipBits_c_3 ), 
    .dipBits3(dipBits[3]));
  dipBits_4_ \dipBits[4]_I ( .PADDI(\dddd1.dipBits_c_4 ), 
    .dipBits4(dipBits[4]));
  dipBits_5_ \dipBits[5]_I ( .PADDI(\dddd1.dipBits_c_5 ), 
    .dipBits5(dipBits[5]));
  leds_0_ \leds[0]_I ( .PADDO(leds_c_12), .leds0(leds[0]));
  leds_1_ \leds[1]_I ( .PADDO(leds_c_1), .leds1(leds[1]));
  display_0_ \display[0]_I ( .PADDO(display_c_0), .display0(display[0]));
  display_1_ \display[1]_I ( .PADDO(display_c_1), .display1(display[1]));
  display_2_ \display[2]_I ( .PADDO(display_c_2), .display2(display[2]));
  display_3_ \display[3]_I ( .PADDO(display_c_3), .display3(display[3]));
  display_4_ \display[4]_I ( .PADDO(display_c_4), .display4(display[4]));
  display_5_ \display[5]_I ( .PADDO(display_c_5), .display5(display[5]));
  display_6_ \display[6]_I ( .PADDO(display_c_6), .display6(display[6]));
endmodule

module SLICE_0 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, output Q0, 
    Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 count_12_13_add_4_11( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 count_12_13__i10( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 count_12_13__i11( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module SLICE_1 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, output Q0, 
    Q1, F0, F1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 count_12_13_add_4_13( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 count_12_13__i12( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 leds_c_12_I_2( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_2 ( input DI1, D1, C1, B1, CLK, CIN1, output Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  fa2 count_12_13_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 count_12_13__i1( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module SLICE_3 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, output Q0, 
    Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 count_12_13_add_4_7( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 count_12_13__i6( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 count_12_13__i7( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_4 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, output Q0, 
    Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 count_12_13_add_4_5( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 count_12_13__i4( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 count_12_13__i5( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_5 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, output Q0, 
    Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 count_12_13_add_4_3( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 count_12_13__i2( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 count_12_13__i3( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_6 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, output Q0, 
    Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 count_12_13_add_4_9( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 count_12_13__i8( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 count_12_13__i9( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_7 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut4 finalTens_0__I_0( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \dddd1/sevenseg1/finalOnes_0__I_0_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xF0CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xC3F8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_9 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40002 finalTens_1__I_0( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 \dddd1/sevenseg2/highBCD_1__I_0_3_3_lut ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xCCF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0xA0FA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module dddd1_sevenseg1_SLICE_10 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40004 \dddd1/sevenseg1/finalOnes_1__I_0_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40005 \dddd1/lowBCD_2__I_1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xA4EF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0x50AB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_11 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40006 display_c_2_I_0( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40007 i702_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xEEF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0xCFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_13 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40008 i712_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0x0FF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_14 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40009 display_c_6_I_0( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40010 \dddd1/sevenseg1/finalOnes_6__I_0_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xF044") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0xC6E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_15 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40011 i708_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 i710_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_16 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40012 display_c_5_I_0( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40013 \dddd1/sevenseg1/finalOnes_5__I_0_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0xF088") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0xA8F2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_18 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40009 display_c_4_I_0( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40014 \dddd1/sevenseg1/lowBCD_2__I_0_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0xA0F1") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module dddd1_SLICE_19 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40015 \dddd1/lowBCD_3__I_0_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40016 \dddd1/mod_3_i109_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0x580C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0x381C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module dddd1_SLICE_20 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40017 \dddd1/sevenseg1/i381_4_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40018 \dddd1/i1_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0xCBC9") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module dddd1_SLICE_21 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40019 \dddd1/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40020 \dddd1/i37_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0xCB6D") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0x0482") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module dddd1_sevenseg2_SLICE_25 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40021 \dddd1/sevenseg2/highBCD_1__I_0_3_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40022 \dddd1/sevenseg2/highBCD_1__I_0_2 ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0xC303") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xA550") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_26 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut4 finalTens_3__I_0( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40023 \dddd1/sevenseg1/finalOnes_3__I_0_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xDEAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_33 ( output F0 );
  wire   GNDI;

  lut40024 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_34 ( input D0, output F0 );
  wire   GNDI;

  lut40025 leds_c_12_I_0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module osc ( input CLKHFPU, CLKHFEN, output CLKHF );
  wire   GNDI;

  HSOSC_CORE_B osc( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(GNDI), 
    .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), .TRIM4(GNDI), 
    .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), .CLKHF(CLKHF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module HSOSC_CORE_B ( input CLKHFPU, CLKHFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKHF );

  HSOSC_CORE INST10( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKHF(CLKHF));
  defparam INST10.CLKHF_DIV = "0b00";
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module dddd1_lowBCD_0__I_0 ( input A5, A4, A3, A2, A1, A0, B3, B2, B0, output 
    O9, O8, O7 );
  wire   GNDI;

  MAC16_B \dddd1/lowBCD_0__I_0 ( .CLK(GNDI), .CE(GNDI), .C15(GNDI), .C14(GNDI), 
    .C13(GNDI), .C12(GNDI), .C11(GNDI), .C10(GNDI), .C9(GNDI), .C8(GNDI), 
    .C7(GNDI), .C6(GNDI), .C5(GNDI), .C4(GNDI), .C3(GNDI), .C2(GNDI), 
    .C1(GNDI), .C0(GNDI), .A15(GNDI), .A14(GNDI), .A13(GNDI), .A12(GNDI), 
    .A11(GNDI), .A10(GNDI), .A9(GNDI), .A8(GNDI), .A7(GNDI), .A6(GNDI), 
    .A5(A5), .A4(A4), .A3(A3), .A2(A2), .A1(A1), .A0(A0), .B15(GNDI), 
    .B14(GNDI), .B13(GNDI), .B12(GNDI), .B11(GNDI), .B10(GNDI), .B9(GNDI), 
    .B8(GNDI), .B7(GNDI), .B6(GNDI), .B5(GNDI), .B4(GNDI), .B3(B3), .B2(B2), 
    .B1(GNDI), .B0(B0), .D15(GNDI), .D14(GNDI), .D13(GNDI), .D12(GNDI), 
    .D11(GNDI), .D10(GNDI), .D9(GNDI), .D8(GNDI), .D7(GNDI), .D6(GNDI), 
    .D5(GNDI), .D4(GNDI), .D3(GNDI), .D2(GNDI), .D1(GNDI), .D0(GNDI), 
    .AHOLD(GNDI), .BHOLD(GNDI), .CHOLD(GNDI), .DHOLD(GNDI), .IRSTTOP(GNDI), 
    .IRSTBOT(GNDI), .ORSTTOP(GNDI), .ORSTBOT(GNDI), .OLOADTOP(GNDI), 
    .OLOADBOT(GNDI), .ADDSUBTOP(GNDI), .ADDSUBBOT(GNDI), .OHOLDTOP(GNDI), 
    .OHOLDBOT(GNDI), .CI(GNDI), .ACCUMCI(GNDI), .SIGNEXTIN(GNDI), .O31(), 
    .O30(), .O29(), .O28(), .O27(), .O26(), .O25(), .O24(), .O23(), .O22(), 
    .O21(), .O20(), .O19(), .O18(), .O17(), .O16(), .O15(), .O14(), .O13(), 
    .O12(), .O11(), .O10(), .O9(O9), .O8(O8), .O7(O7), .O6(), .O5(), .O4(), 
    .O3(), .O2(), .O1(), .O0(), .CO(), .ACCUMCO(), .SIGNEXTOUT());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A5 => O9) = (0:0:0,0:0:0);
    (A5 => O8) = (0:0:0,0:0:0);
    (A5 => O7) = (0:0:0,0:0:0);
    (A4 => O9) = (0:0:0,0:0:0);
    (A4 => O8) = (0:0:0,0:0:0);
    (A4 => O7) = (0:0:0,0:0:0);
    (A3 => O9) = (0:0:0,0:0:0);
    (A3 => O8) = (0:0:0,0:0:0);
    (A3 => O7) = (0:0:0,0:0:0);
    (A2 => O9) = (0:0:0,0:0:0);
    (A2 => O8) = (0:0:0,0:0:0);
    (A2 => O7) = (0:0:0,0:0:0);
    (A1 => O9) = (0:0:0,0:0:0);
    (A1 => O8) = (0:0:0,0:0:0);
    (A1 => O7) = (0:0:0,0:0:0);
    (A0 => O9) = (0:0:0,0:0:0);
    (A0 => O8) = (0:0:0,0:0:0);
    (A0 => O7) = (0:0:0,0:0:0);
    (B3 => O9) = (0:0:0,0:0:0);
    (B3 => O8) = (0:0:0,0:0:0);
    (B3 => O7) = (0:0:0,0:0:0);
    (B2 => O9) = (0:0:0,0:0:0);
    (B2 => O8) = (0:0:0,0:0:0);
    (B2 => O7) = (0:0:0,0:0:0);
    (B0 => O9) = (0:0:0,0:0:0);
    (B0 => O8) = (0:0:0,0:0:0);
    (B0 => O7) = (0:0:0,0:0:0);
  endspecify

endmodule

module MAC16_B ( input CLK, CE, C15, C14, C13, C12, C11, C10, C9, C8, C7, C6, 
    C5, C4, C3, C2, C1, C0, A15, A14, A13, A12, A11, A10, A9, A8, A7, A6, A5, 
    A4, A3, A2, A1, A0, B15, B14, B13, B12, B11, B10, B9, B8, B7, B6, B5, B4, 
    B3, B2, B1, B0, D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, 
    D2, D1, D0, AHOLD, BHOLD, CHOLD, DHOLD, IRSTTOP, IRSTBOT, ORSTTOP, ORSTBOT, 
    OLOADTOP, OLOADBOT, ADDSUBTOP, ADDSUBBOT, OHOLDTOP, OHOLDBOT, CI, ACCUMCI, 
    SIGNEXTIN, output O31, O30, O29, O28, O27, O26, O25, O24, O23, O22, O21, 
    O20, O19, O18, O17, O16, O15, O14, O13, O12, O11, O10, O9, O8, O7, O6, O5, 
    O4, O3, O2, O1, O0, CO, ACCUMCO, SIGNEXTOUT );

  MAC16 INST10( .CLK(CLK), .CE(CE), .C15(C15), .C14(C14), .C13(C13), .C12(C12), 
    .C11(C11), .C10(C10), .C9(C9), .C8(C8), .C7(C7), .C6(C6), .C5(C5), .C4(C4), 
    .C3(C3), .C2(C2), .C1(C1), .C0(C0), .A15(A15), .A14(A14), .A13(A13), 
    .A12(A12), .A11(A11), .A10(A10), .A9(A9), .A8(A8), .A7(A7), .A6(A6), 
    .A5(A5), .A4(A4), .A3(A3), .A2(A2), .A1(A1), .A0(A0), .B15(B15), .B14(B14), 
    .B13(B13), .B12(B12), .B11(B11), .B10(B10), .B9(B9), .B8(B8), .B7(B7), 
    .B6(B6), .B5(B5), .B4(B4), .B3(B3), .B2(B2), .B1(B1), .B0(B0), .D15(D15), 
    .D14(D14), .D13(D13), .D12(D12), .D11(D11), .D10(D10), .D9(D9), .D8(D8), 
    .D7(D7), .D6(D6), .D5(D5), .D4(D4), .D3(D3), .D2(D2), .D1(D1), .D0(D0), 
    .AHOLD(AHOLD), .BHOLD(BHOLD), .CHOLD(CHOLD), .DHOLD(DHOLD), 
    .IRSTTOP(IRSTTOP), .IRSTBOT(IRSTBOT), .ORSTTOP(ORSTTOP), .ORSTBOT(ORSTBOT), 
    .OLOADTOP(OLOADTOP), .OLOADBOT(OLOADBOT), .ADDSUBTOP(ADDSUBTOP), 
    .ADDSUBBOT(ADDSUBBOT), .OHOLDTOP(OHOLDTOP), .OHOLDBOT(OHOLDBOT), .CI(CI), 
    .ACCUMCI(ACCUMCI), .SIGNEXTIN(SIGNEXTIN), .O31(O31), .O30(O30), .O29(O29), 
    .O28(O28), .O27(O27), .O26(O26), .O25(O25), .O24(O24), .O23(O23), 
    .O22(O22), .O21(O21), .O20(O20), .O19(O19), .O18(O18), .O17(O17), 
    .O16(O16), .O15(O15), .O14(O14), .O13(O13), .O12(O12), .O11(O11), 
    .O10(O10), .O9(O9), .O8(O8), .O7(O7), .O6(O6), .O5(O5), .O4(O4), .O3(O3), 
    .O2(O2), .O1(O1), .O0(O0), .CO(CO), .ACCUMCO(ACCUMCO), 
    .SIGNEXTOUT(SIGNEXTOUT));
  defparam INST10.NEG_TRIGGER = "0b0";
  defparam INST10.A_REG = "0b0";
  defparam INST10.B_REG = "0b0";
  defparam INST10.C_REG = "0b0";
  defparam INST10.D_REG = "0b0";
  defparam INST10.TOP_8x8_MULT_REG = "0b0";
  defparam INST10.BOT_8x8_MULT_REG = "0b0";
  defparam INST10.PIPELINE_16x16_MULT_REG1 = "0b0";
  defparam INST10.PIPELINE_16x16_MULT_REG2 = "0b0";
  defparam INST10.TOPOUTPUT_SELECT = "0b10";
  defparam INST10.TOPADDSUB_LOWERINPUT = "0b00";
  defparam INST10.TOPADDSUB_UPPERINPUT = "0b0";
  defparam INST10.TOPADDSUB_CARRYSELECT = "0b00";
  defparam INST10.BOTOUTPUT_SELECT = "0b10";
  defparam INST10.BOTADDSUB_LOWERINPUT = "0b00";
  defparam INST10.BOTADDSUB_UPPERINPUT = "0b0";
  defparam INST10.BOTADDSUB_CARRYSELECT = "0b00";
  defparam INST10.MODE_8x8 = "0b1";
  defparam INST10.A_SIGNED = "0b0";
  defparam INST10.B_SIGNED = "0b0";
endmodule

module dipBits_0_ ( output PADDI, input dipBits0 );
  wire   GNDI;

  BB_B_B \dddd1/dipBits_pad[0].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(dipBits0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (dipBits0 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module dipBits_1_ ( output PADDI, input dipBits1 );
  wire   GNDI;

  BB_B_B \dddd1/dipBits_pad[1].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(dipBits1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (dipBits1 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module dipBits_2_ ( output PADDI, input dipBits2 );
  wire   GNDI;

  BB_B_B \dddd1/dipBits_pad[2].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(dipBits2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (dipBits2 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module dipBits_3_ ( output PADDI, input dipBits3 );
  wire   GNDI;

  BB_B_B \dddd1/dipBits_pad[3].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(dipBits3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (dipBits3 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module dipBits_4_ ( output PADDI, input dipBits4 );
  wire   GNDI;

  BB_B_B \dddd1/dipBits_pad[4].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(dipBits4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (dipBits4 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module dipBits_5_ ( output PADDI, input dipBits5 );
  wire   GNDI;

  BB_B_B \dddd1/dipBits_pad[5].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(dipBits5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (dipBits5 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module leds_0_ ( input PADDO, output leds0 );
  wire   VCCI;

  BB_B_B \leds_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(leds0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => leds0) = (0:0:0,0:0:0);
  endspecify

endmodule

module leds_1_ ( input PADDO, output leds1 );
  wire   VCCI;

  BB_B_B \leds_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(leds1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => leds1) = (0:0:0,0:0:0);
  endspecify

endmodule

module display_0_ ( input PADDO, output display0 );
  wire   VCCI;

  BB_B_B \display_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(display0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => display0) = (0:0:0,0:0:0);
  endspecify

endmodule

module display_1_ ( input PADDO, output display1 );
  wire   VCCI;

  BB_B_B \display_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(display1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => display1) = (0:0:0,0:0:0);
  endspecify

endmodule

module display_2_ ( input PADDO, output display2 );
  wire   VCCI;

  BB_B_B \display_pad[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(display2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => display2) = (0:0:0,0:0:0);
  endspecify

endmodule

module display_3_ ( input PADDO, output display3 );
  wire   VCCI;

  BB_B_B \display_pad[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(display3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => display3) = (0:0:0,0:0:0);
  endspecify

endmodule

module display_4_ ( input PADDO, output display4 );
  wire   VCCI;

  BB_B_B \display_pad[4].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(display4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => display4) = (0:0:0,0:0:0);
  endspecify

endmodule

module display_5_ ( input PADDO, output display5 );
  wire   VCCI;

  BB_B_B \display_pad[5].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(display5));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => display5) = (0:0:0,0:0:0);
  endspecify

endmodule

module display_6_ ( input PADDO, output display6 );
  wire   VCCI;

  BB_B_B \display_pad[6].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(display6));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => display6) = (0:0:0,0:0:0);
  endspecify

endmodule
